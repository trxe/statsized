syntax = "proto3";

package statsized;

service Statsized {
    rpc GetCurrentGames (RequestFilter) returns (Response);
    // rpc StreamPlays (RequestFilter) returns (stream Play);
    // rpc StreamShifts (RequestFilter) returns (stream Shift);
    // rpc StreamScores (RequestFilter) returns (stream Score);
    // rpc StreamClock (RequestFilter) returns (stream Clock);
    // rpc GetPlays (Game) returns (Play);
    // rpc GetShifts (Game) returns (Shift);
    // rpc GetScores (Game) returns (Score);
    // rpc GetClock (Game) returns (Clock);
}

message Coords {
    double x = 1;
    double y = 2;
}

message Player {
    int64 id = 1;
}

message Team {
    int64 id = 1;
}

message Game {
    int64 id = 1;
    optional int32 season = 2;
    optional int32 game_type_id = 3;
    optional string start_time_utc = 4;
    optional string venue_utc_offset = 5;
    optional string venue_timezone = 6;
    optional string game_state = 7;
    optional Team home_team = 8;
    optional Team away_team = 9;
    optional string gamecenter_url = 10;
}

message Filter {
    Game game = 1;
    optional Team team = 2;
    optional Player player = 3;
}

message RequestFilter {
    string host = 1;
    optional Filter filter = 2;
}

message Response {
    repeated Game games = 1;
}

message Clock {
    int32 seconds_remaining = 1;
    bool running = 2;
    bool in_intermission = 3;
}

message PlayerKeyFrame {
    int64 id = 1;
    Player player = 2;
    int64 jersey_number = 3;
    Team team = 4;
    Coords coord = 5;
}

message Attribute {
    string key = 1;
    string value = 2;
}

message Shift {
    int64 id = 1;
    int32 detail_code = 2;
    int64 start_ts = 3;
    int64 end_ts = 4;
    Player player = 5;
    Team team = 6;
    int64 shift_num = 7;
    Game game = 8;
}

message PlayerEvent {
    int64 id = 1;
    Player player = 2;
    int64 event_code = 3;
    string event = 4;
    optional string event_role = 6;
    optional Team event_owner_team = 7;
    repeated Attribute attrs = 8;
    optional Coords coords = 9;
}

message Play {
    int64 id = 1;
    int32 period = 2;
    int32 time_since_start = 3;

    // Change the following to enums later
    string situation_code = 4;
    string home_team_defending_side = 5;
    int32 type_code = 6;
    string type_desc = 7;
    int32 sort_order = 8;
    
    repeated PlayerEvent player_events = 9;
}

message Score {
    string situation_code = 1;
    int32 event_code = 2;
    Player player = 3;
    repeated Player assists = 4;
    bool is_home = 5;
    int32 home_score = 6;
    int32 away_score = 7;
}